@model WebSiteBanHang.Models.SanPham

@{
    ViewBag.Title = "TaoMoi";
    Layout = "~/Views/Layout/AdminLayout.cshtml";
}

@*Bước 1: sử dụng control dâetimepicker chèn 3 file script*@
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
@*Bước 1: khi sd control editor tinymce*@
<script src="~/Content/tinymce/tinymce.min.js"></script>
<script>
    tinymce.init({
        selector: 'textarea',
        plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss',
        toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
        tinycomments_mode: 'embedded',
        tinycomments_author: 'Author name',
        mergetags_list: [
            { value: 'First.Name', title: 'First Name' },
            { value: 'Email', title: 'Email' },
        ]
    });
</script>



@*Bước 2: cây dựng 1 function để điều hướng thẻ html theo dạng control datepicker*@
<script>
    $(function () {
        $("#datepicker").datepicker();
    });
</script>

<h2>Tạo mới sản phẩm</h2>

@*Bước 1: khi thêm hình ảnh*@
@using (Html.BeginForm("TaoMoi","QuanLySanPham", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @*        <h4>SanPham</h4>*@
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="form-group">
            @Html.LabelFor(model => model.MaSP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.MaSP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaSP, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.TenSP, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.TenSP, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TenSP, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DonGia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
           @* @Html.TextBox("DonGia", Model.DonGia.Value.ToString("#,##"))*@
            @Html.EditorFor(model => model.DonGia, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DonGia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GiaCu, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
          @*  @Html.TextBox("GiaCu", Model.GiaCu.Value.ToString("#,##"))*@
            @Html.EditorFor(model => model.GiaCu, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GiaCu, "", new { @class = "text-danger" })
        </div>
    </div>

    @* Bước 3: đặt thêm thuộc tính id cho thẻ textbox*@
    <div class="form-group">
        @Html.LabelFor(model => model.NgayCapNhap, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <input name="NgayCapNhap" type="text" id="datepicker" style="font-size: 18px;" />
            @*@Html.TextBox("NgayCapNhap", "", new {id= "datepicker" })*@
            @Html.ValidationMessageFor(model => model.NgayCapNhap, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CauHinh, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.CauHinh, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CauHinh, "", new { @class = "text-danger" })
        </div>
    </div>

    @* Bước 2: tạo 1 thẻ input với type = "file" để open ảnh *@
    <div class="form-group">
        @Html.LabelFor(model => model.HinhAnh, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @*@Html.EditorFor(model => model.HinhAnh, new { htmlAttributes = new { @class = "form-control" } })*@
            <input name="HinhAnh" type="file" />
            <span style="color: red;">@ViewBag.upload</span>

            @* @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HinhAnh1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <input id="HinhAnh" name="HinhAnh" type="file" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HinhAnh2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <input id="HinhAnh" name="HinhAnh" type="file" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HinhAnh3, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <input id="HinhAnh" name="HinhAnh" type="file" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SoLuongTon, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.SoLuongTon, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SoLuongTon, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LuotXem, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.LuotXem, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LuotXem, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LuotBinhChon, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.LuotBinhChon, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LuotBinhChon, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LuotBinhLuan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.LuotBinhLuan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LuotBinhLuan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SoLanMua, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.SoLanMua, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SoLanMua, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Moi, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.Moi, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Moi, "", new { @class = "text-danger" })
        </div>
    </div>

    @*  để load đúng dữ liệu của dropdownlist thì các bạn truyền đúng tên (name) đúng với tên ViewBag *@
    <div class="form-group">
        @Html.LabelFor(model => model.MaNCC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownList("MaNCC", null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MaNCC, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaNSX, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownList("MaNSX", null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MaNSX, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaLoaiSP, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownList("MaLoaiSP", null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MaLoaiSP, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DaXoa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.DaXoa, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DaXoa, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhanLoai, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.PhanLoai, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhanLoai, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TenPhanLoai, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.TenPhanLoai, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TenPhanLoai, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SaleNew, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.SaleNew, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SaleNew, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <textarea name="MoTa"></textarea>
            @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input style="font-size: 20px;" type="submit" value="Tạo Mới" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-success", @style = "font-size: 20px;" })
</div>
